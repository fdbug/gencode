syntax = "v1"

info(
	title: "artifact"
	desc: "api接口文件"
	author: ""
	email: ""
	version: ""
)

import (
	"types/common.api"
	"types/martifact.api"
	"types/martifacttype.api"
	"types/mbug.api"
	"types/menv.api"
	"types/mexternaldiffrecords.api"
	"types/mexternalserver.api"
	"types/mexternaltask.api"
	"types/mmasterversion.api"
	"types/mproject.api"
	"types/mtypemap.api"
	"types/mversion.api"
)

//-----------------------MArtifact的接口-----------------------
@server(
	prefix: artifact/MArtifact
	group: martifact
)
service artifact {
	@doc "添加MArtifact"
	@handler CreateMArtifact
	post /create (CreateMArtifactReq) returns (CreateMArtifactResp)
	
	@doc "删除MArtifact"
	@handler DeleteMArtifact
	post /delete (IdsReq) returns (DeleteMArtifactResp)
	
	@doc "查询MArtifact详情"
	@handler MArtifactDetail
	post /detail (IdReq) returns (DetailMArtifactResp)
	
	@doc "分页查询MArtifact"
	@handler MArtifactPage
	post /page (SearchMArtifactReq) returns (SearchMArtifactResp)
	
	@doc "更新MArtifact"
	@handler UpdateMArtifact
	post /update (UpdateMArtifactReq) returns (UpdateMArtifactResp)
}

//-----------------------MArtifactType的接口-----------------------
@server(
	prefix: artifact/MArtifactType
	group: martifacttype
)
service artifact {
	@doc "添加MArtifactType"
	@handler CreateMArtifactType
	post /create (CreateMArtifactTypeReq) returns (CreateMArtifactTypeResp)
	
	@doc "删除MArtifactType"
	@handler DeleteMArtifactType
	post /delete (IdsReq) returns (DeleteMArtifactTypeResp)
	
	@doc "查询MArtifactType详情"
	@handler MArtifactTypeDetail
	post /detail (IdReq) returns (DetailMArtifactTypeResp)
	
	@doc "分页查询MArtifactType"
	@handler MArtifactTypePage
	post /page (SearchMArtifactTypeReq) returns (SearchMArtifactTypeResp)
	
	@doc "更新MArtifactType"
	@handler UpdateMArtifactType
	post /update (UpdateMArtifactTypeReq) returns (UpdateMArtifactTypeResp)
}

//-----------------------MBug的接口-----------------------
@server(
	prefix: artifact/MBug
	group: mbug
)
service artifact {
	@doc "添加MBug"
	@handler CreateMBug
	post /create (CreateMBugReq) returns (CreateMBugResp)
	
	@doc "删除MBug"
	@handler DeleteMBug
	post /delete (IdsReq) returns (DeleteMBugResp)
	
	@doc "查询MBug详情"
	@handler MBugDetail
	post /detail (IdReq) returns (DetailMBugResp)
	
	@doc "分页查询MBug"
	@handler MBugPage
	post /page (SearchMBugReq) returns (SearchMBugResp)
	
	@doc "更新MBug"
	@handler UpdateMBug
	post /update (UpdateMBugReq) returns (UpdateMBugResp)
}

//-----------------------MEnv的接口-----------------------
@server(
	prefix: artifact/MEnv
	group: menv
)
service artifact {
	@doc "添加MEnv"
	@handler CreateMEnv
	post /create (CreateMEnvReq) returns (CreateMEnvResp)
	
	@doc "删除MEnv"
	@handler DeleteMEnv
	post /delete (IdsReq) returns (DeleteMEnvResp)
	
	@doc "查询MEnv详情"
	@handler MEnvDetail
	post /detail (IdReq) returns (DetailMEnvResp)
	
	@doc "分页查询MEnv"
	@handler MEnvPage
	post /page (SearchMEnvReq) returns (SearchMEnvResp)
	
	@doc "更新MEnv"
	@handler UpdateMEnv
	post /update (UpdateMEnvReq) returns (UpdateMEnvResp)
}

//-----------------------MExternalDiffRecords的接口-----------------------
@server(
	prefix: artifact/MExternalDiffRecords
	group: mexternaldiffrecords
)
service artifact {
	@doc "添加MExternalDiffRecords"
	@handler CreateMExternalDiffRecords
	post /create (CreateMExternalDiffRecordsReq) returns (CreateMExternalDiffRecordsResp)
	
	@doc "删除MExternalDiffRecords"
	@handler DeleteMExternalDiffRecords
	post /delete (IdsReq) returns (DeleteMExternalDiffRecordsResp)
	
	@doc "查询MExternalDiffRecords详情"
	@handler MExternalDiffRecordsDetail
	post /detail (IdReq) returns (DetailMExternalDiffRecordsResp)
	
	@doc "分页查询MExternalDiffRecords"
	@handler MExternalDiffRecordsPage
	post /page (SearchMExternalDiffRecordsReq) returns (SearchMExternalDiffRecordsResp)
	
	@doc "更新MExternalDiffRecords"
	@handler UpdateMExternalDiffRecords
	post /update (UpdateMExternalDiffRecordsReq) returns (UpdateMExternalDiffRecordsResp)
}

//-----------------------MExternalServer的接口-----------------------
@server(
	prefix: artifact/MExternalServer
	group: mexternalserver
)
service artifact {
	@doc "添加MExternalServer"
	@handler CreateMExternalServer
	post /create (CreateMExternalServerReq) returns (CreateMExternalServerResp)
	
	@doc "删除MExternalServer"
	@handler DeleteMExternalServer
	post /delete (IdsReq) returns (DeleteMExternalServerResp)
	
	@doc "查询MExternalServer详情"
	@handler MExternalServerDetail
	post /detail (IdReq) returns (DetailMExternalServerResp)
	
	@doc "分页查询MExternalServer"
	@handler MExternalServerPage
	post /page (SearchMExternalServerReq) returns (SearchMExternalServerResp)
	
	@doc "更新MExternalServer"
	@handler UpdateMExternalServer
	post /update (UpdateMExternalServerReq) returns (UpdateMExternalServerResp)
}

//-----------------------MExternalTask的接口-----------------------
@server(
	prefix: artifact/MExternalTask
	group: mexternaltask
)
service artifact {
	@doc "添加MExternalTask"
	@handler CreateMExternalTask
	post /create (CreateMExternalTaskReq) returns (CreateMExternalTaskResp)
	
	@doc "删除MExternalTask"
	@handler DeleteMExternalTask
	post /delete (IdsReq) returns (DeleteMExternalTaskResp)
	
	@doc "查询MExternalTask详情"
	@handler MExternalTaskDetail
	post /detail (IdReq) returns (DetailMExternalTaskResp)
	
	@doc "分页查询MExternalTask"
	@handler MExternalTaskPage
	post /page (SearchMExternalTaskReq) returns (SearchMExternalTaskResp)
	
	@doc "更新MExternalTask"
	@handler UpdateMExternalTask
	post /update (UpdateMExternalTaskReq) returns (UpdateMExternalTaskResp)
}

//-----------------------MMasterVersion的接口-----------------------
@server(
	prefix: artifact/MMasterVersion
	group: mmasterversion
)
service artifact {
	@doc "添加MMasterVersion"
	@handler CreateMMasterVersion
	post /create (CreateMMasterVersionReq) returns (CreateMMasterVersionResp)
	
	@doc "删除MMasterVersion"
	@handler DeleteMMasterVersion
	post /delete (IdsReq) returns (DeleteMMasterVersionResp)
	
	@doc "查询MMasterVersion详情"
	@handler MMasterVersionDetail
	post /detail (IdReq) returns (DetailMMasterVersionResp)
	
	@doc "分页查询MMasterVersion"
	@handler MMasterVersionPage
	post /page (SearchMMasterVersionReq) returns (SearchMMasterVersionResp)
	
	@doc "更新MMasterVersion"
	@handler UpdateMMasterVersion
	post /update (UpdateMMasterVersionReq) returns (UpdateMMasterVersionResp)
}

//-----------------------MProject的接口-----------------------
@server(
	prefix: artifact/MProject
	group: mproject
)
service artifact {
	@doc "添加MProject"
	@handler CreateMProject
	post /create (CreateMProjectReq) returns (CreateMProjectResp)
	
	@doc "删除MProject"
	@handler DeleteMProject
	post /delete (IdsReq) returns (DeleteMProjectResp)
	
	@doc "查询MProject详情"
	@handler MProjectDetail
	post /detail (IdReq) returns (DetailMProjectResp)
	
	@doc "分页查询MProject"
	@handler MProjectPage
	post /page (SearchMProjectReq) returns (SearchMProjectResp)
	
	@doc "更新MProject"
	@handler UpdateMProject
	post /update (UpdateMProjectReq) returns (UpdateMProjectResp)
}

//-----------------------MTypeMap的接口-----------------------
@server(
	prefix: artifact/MTypeMap
	group: mtypemap
)
service artifact {
	@doc "添加MTypeMap"
	@handler CreateMTypeMap
	post /create (CreateMTypeMapReq) returns (CreateMTypeMapResp)
	
	@doc "删除MTypeMap"
	@handler DeleteMTypeMap
	post /delete (IdsReq) returns (DeleteMTypeMapResp)
	
	@doc "查询MTypeMap详情"
	@handler MTypeMapDetail
	post /detail (IdReq) returns (DetailMTypeMapResp)
	
	@doc "分页查询MTypeMap"
	@handler MTypeMapPage
	post /page (SearchMTypeMapReq) returns (SearchMTypeMapResp)
	
	@doc "更新MTypeMap"
	@handler UpdateMTypeMap
	post /update (UpdateMTypeMapReq) returns (UpdateMTypeMapResp)
}

//-----------------------MVersion的接口-----------------------
@server(
	prefix: artifact/MVersion
	group: mversion
)
service artifact {
	@doc "添加MVersion"
	@handler CreateMVersion
	post /create (CreateMVersionReq) returns (CreateMVersionResp)
	
	@doc "删除MVersion"
	@handler DeleteMVersion
	post /delete (IdsReq) returns (DeleteMVersionResp)
	
	@doc "查询MVersion详情"
	@handler MVersionDetail
	post /detail (IdReq) returns (DetailMVersionResp)
	
	@doc "分页查询MVersion"
	@handler MVersionPage
	post /page (SearchMVersionReq) returns (SearchMVersionResp)
	
	@doc "更新MVersion"
	@handler UpdateMVersion
	post /update (UpdateMVersionReq) returns (UpdateMVersionResp)
}